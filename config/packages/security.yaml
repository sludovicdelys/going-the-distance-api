security:
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: bcrypt

    providers:
        in_memory:
            memory:
                users:
                    runner:
                        password: '%env(RUNNER_PASSWORD)%' # hashed password from environment variable
                        roles: ['ROLE_USER']

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        public:
            pattern: ^/api
            stateless: true
            security: false

        main:
            pattern: ^/api
            lazy: true
            stateless: true
            provider: in_memory
            http_basic: ~

    access_control:
        # Allow unauthenticated access to GET requests for /runs, /users/{id}/runs, and /runs/{id}
        - { path: ^/api/runs, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
        - { path: ^/api/users/\d+/runs, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
        - { path: ^/api/runs/\d+, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }

        # Restrict POST, PUT, DELETE requests to users with ROLE_FRONTEND
        - { path: ^/api/runs, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/runs/\d+, roles: IS_AUTHENTICATED_FULLY, methods: [PUT, DELETE] }
